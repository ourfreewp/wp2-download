<?php
namespace WP2\Download\Modules\Archi\CLI;

use WP2\Download\Archi\Registry;
use WP2\Download\Modules\Archi\Caching;
use WP2\Download\Modules\Archi\Viz\Mermaid\Generator;
use WP_CLI_Command;

defined( 'ABSPATH' ) || exit;

/**
 * @component_id archi_cli_commands
 * @namespace archi.cli
 * @type Utility
 * @note "WP-CLI commands for architecture graph management."
 * @facet {"name": "export", "visibility": "public", "returnType": "void"}
 * @facet {"name": "flush_cache", "visibility": "public", "returnType": "void"}
 * @facet {"name": "rebuild_cache", "visibility": "public", "returnType": "void"}
 * @relation {"to": "caching", "type": "dependency", "label": "flushes and rebuilds cache"}
 * @relation {"to": "registry", "type": "dependency", "label": "exports components"}
 * @relation {"to": "mermaid_generator", "type": "dependency", "label": "exports diagram"}
 */
class Commands extends WP_CLI_Command {

	/**
	 * Export the architecture graph to Mermaid format.
	 *
	 * ## OPTIONS
	 *
	 * [--file=<file>]
	 * : Path to the output file. If omitted, will output to STDOUT.
	 *
	 * [--compact]
	 * : Generate a more compact diagram.
	 *
	 * ## EXAMPLES
	 *
	 * wp wp2 archi export --file=./architecture.md
	 * wp wp2 archi export > architecture.txt
	 */
	public function export( array $args, array $assoc_args ): void {
		$components = Registry::instance()->all();
		$compact    = ! empty( $assoc_args['compact'] );
		$opts       = array(
			'compact'    => $compact,
			'notes'      => array( 'WP2 Architecture Export' ),
			'comments'   => array( 'Generated by wp2-archi CLI' ),
			'class_defs' => array(
				'Service'  => array( 'fill:#add8e6', 'stroke:#000' ),
				'Manager'  => array( 'fill:#90ee90', 'stroke:#000' ),
				'Database' => array( 'fill:#ffe4b5', 'stroke:#000' ),
			),
		);
		$mermaid    = Generator::from_components( $components, $opts );

		$file = $assoc_args['file'] ?? '';
		if ( $file ) {
			if ( ! file_put_contents( $file, $mermaid ) ) {
				\WP_CLI::error( 'Failed to write to file.' );
			}
			\WP_CLI::success( "Wrote Mermaid diagram to: {$file}" );
			return;
		}
		echo $mermaid;
	}

	/**
	 * Flush the architecture graph cache.
	 *
	 * ## EXAMPLES
	 *
	 * wp wp2 archi flush-cache
	 */
	public function flush_cache(): void {
		( new Caching() )->flush_cache();
		\WP_CLI::success( 'Architecture cache flushed.' );
	}

	/**
	 * Rebuild the architecture graph cache.
	 *
	 * ## EXAMPLES
	 *
	 * wp wp2 archi rebuild-cache
	 */
	public function rebuild_cache(): void {
		( new Caching() )->rebuild_cache();
		\WP_CLI::success( 'Architecture cache rebuilt.' );
	}
}
