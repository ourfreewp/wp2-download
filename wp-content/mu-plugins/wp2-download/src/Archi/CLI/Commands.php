<?php
namespace WP2\Download\Archi\CLI;

use WP2\Download\Archi\Caching;
use WP2\Download\Archi\Registry;
use WP2\Download\Archi\Viz\Mermaid\Generator;
use WP_CLI_Command;

defined( 'ABSPATH' ) || exit;

class Commands extends WP_CLI_Command {

	/**
	 * Export the architecture graph to Mermaid format.
	 *
	 * ## OPTIONS
	 *
	 * [--file=<file>]
	 * : Path to the output file. If omitted, will output to STDOUT.
	 *
	 * [--compact]
	 * : Generate a more compact diagram.
	 *
	 * ## EXAMPLES
	 *
	 * wp wp2 archi export --file=./architecture.md
	 * wp wp2 archi export > architecture.txt
	 */
	public function export( array $args, array $assoc_args ): void {
		$components = Registry::instance()->all();
		$compact = ! empty( $assoc_args['compact'] );
		$opts = [ 
			'compact' => $compact,
			'notes' => [ 'WP2 Architecture Export' ],
			'comments' => [ 'Generated by wp2-archi CLI' ],
			'class_defs' => [ 
				'Service' => [ 'fill:#add8e6', 'stroke:#000' ],
				'Manager' => [ 'fill:#90ee90', 'stroke:#000' ],
				'Database' => [ 'fill:#ffe4b5', 'stroke:#000' ],
			],
		];
		$mermaid = Generator::from_components( $components, $opts );

		$file = $assoc_args['file'] ?? '';
		if ( $file ) {
			if ( ! file_put_contents( $file, $mermaid ) ) {
				\WP_CLI::error( 'Failed to write to file.' );
			}
			\WP_CLI::success( "Wrote Mermaid diagram to: {$file}" );
			return;
		}
		echo $mermaid;
	}

	/**
	 * Flush the architecture graph cache.
	 *
	 * ## EXAMPLES
	 *
	 * wp wp2 archi flush-cache
	 */
	public function flush_cache(): void {
		( new Caching() )->flush_cache();
		\WP_CLI::success( 'Architecture cache flushed.' );
	}

	/**
	 * Rebuild the architecture graph cache.
	 *
	 * ## EXAMPLES
	 *
	 * wp wp2 archi rebuild-cache
	 */
	public function rebuild_cache(): void {
		( new Caching() )->rebuild_cache();
		\WP_CLI::success( 'Architecture cache rebuilt.' );
	}
}
